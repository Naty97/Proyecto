/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Natacion.interfaz;

import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Usuario
 */
public class Piscina extends javax.swing.JFrame {
    int tiempo=0;
    /**
     * Creates new form Piscina
     */
    public Piscina() {
        initComponents();
        piscina.setFocusable(true);
        System.out.println(nadador.getWidth());
        System.out.println(piscina.getWidth());
        
    }
    public int calcularFinal(){
        return piscina.getWidth()- nadador.getWidth();
        
    }
    public void mover (){
        int finalPiscina=calcularFinal();
        int posicion= nadador.getY();
        while (posicion < finalPiscina){
            posicion= posicion + 2;
             nadador.setLocation(nadador.getX(), nadador.getY()+2);
            try {
                Thread.sleep(2000);
                tiempo ++;
                refrescarTiempo();
            } catch (InterruptedException ex) {
                Logger.getLogger(Piscina.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        

    }
    public void refrescarTiempo(){
        cronometro.setText(String.valueOf(tiempo));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        piscina = new javax.swing.JPanel();
        nadador = new javax.swing.JLabel();
        cronometro = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        piscina.setMaximumSize(new java.awt.Dimension(300, 400));
        piscina.setPreferredSize(new java.awt.Dimension(300, 400));
        piscina.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                piscinaKeyPressed(evt);
            }
        });

        nadador.setIcon(new javax.swing.ImageIcon("C:\\Users\\Usuario\\Desktop\\cc.png")); // NOI18N
        nadador.setText("jLabel1");
        nadador.setAlignmentY(0.0F);

        cronometro.setText("  0");

        javax.swing.GroupLayout piscinaLayout = new javax.swing.GroupLayout(piscina);
        piscina.setLayout(piscinaLayout);
        piscinaLayout.setHorizontalGroup(
            piscinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(piscinaLayout.createSequentialGroup()
                .addComponent(nadador)
                .addGap(0, 155, Short.MAX_VALUE))
            .addGroup(piscinaLayout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addComponent(cronometro, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        piscinaLayout.setVerticalGroup(
            piscinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(piscinaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cronometro, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(nadador)
                .addContainerGap(134, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(piscina, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(piscina, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void piscinaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_piscinaKeyPressed
       switch (evt.getExtendedKeyCode()){
           case KeyEvent.VK_UP:
               nadador.setLocation(nadador.getX(), nadador.getY()+2);
       }
    }//GEN-LAST:event_piscinaKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Piscina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Piscina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Piscina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Piscina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Piscina piscina=new Piscina ();
                 piscina.setVisible(true);
                 piscina.mover();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cronometro;
    private javax.swing.JLabel nadador;
    private javax.swing.JPanel piscina;
    // End of variables declaration//GEN-END:variables
}
